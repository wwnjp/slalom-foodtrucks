

@mixin round($size: $line-height) {
  border-radius: 50%;
  width: $size * 1em;
  height: $size * 1em;
}


@mixin drop-shadow($size: 1, $distance: 0, $color: rgba(0, 0, 0, .25), $x: 0) {
  box-shadow: $x ($distance * $base-number) ($base-number * $size) get-color($color);
}


@mixin opacity($opacity: .5) {
  opacity: $opacity;
}

@mixin text-shadow {
  text-shadow: 1px 2px 3px rgba(0, 0, 0, .25);
}



@mixin transform($rules) {
  transform: $rules;
}

@mixin animate($n: 1) {
  transition: all (map-get($animation-defaults, time) * $n) map-get($animation-defaults, easing);
}

@mixin animate-bounce($n: 1) {
  transition: all (map-get($animation-defaults, time) * $n) cubic-bezier(.175, .885, .32, 1.275);
}

@mixin animate-delay($n: 1) {
  transition-delay: ($n * .5s);
}

// .keyframes($name; $arguments) {
//  @-webkit-keyframes @name { $arguments(); }
//  @keyframes @name { $arguments(); }
// }



// @mixin spinning(@n: 1) {
//  .keyframes(spinning, {
//    from {.transform(rotateZ(0deg)); }
//    to   {.transform(rotateZ(360deg)); }
//  });
//  animation: spinning (@animation-time * @n) linear 0s infinite;
// }

@mixin circlify($n) {
  clip-path: circle($n at center);
}

@mixin triangle($dir, $size, $color) {
  @if $dir == 'up' {
    &:before {
      border-bottom: $size $color solid;
      border-left: $size transparent solid;
      border-right: $size transparent solid;
      border-top: $size transparent solid;
      content: '';
      height: $size;
      left: 25%;
      position: absolute;
      top: ($size * -2);
      width: $size;
    }
  }
}


// JS FX
